#!/usr/bin/env bash

#Colors:
        Rd='\033[0;31m'    # Red
        Gn='\033[0;32m'  # Green
        Yw='\033[0;33m' # Yellow
        Be='\033[0;34m'   # Blue
        Pe='\033[0;35m' # Purple
        Cn='\033[0;36m'   # Cyan
        We='\033[0;97m'  # White

#Logo:
function docker_logo() {
 echo -e "
                    $We##        $Cn.            
              $We## ## ##       $Cn==            
           $We## ## ## ##      $Cn===            
      $Cn "'/""""""""""""""""\___/ ==='"          
 $Be ~~~ $Cn{$Be~~ ~~~~ ~~~ ~~~~ ~~ ~ $Cn/  ===- $Be~~~   
 $Cn      \______$We o $Cn         __/            
 $We        \    $Cn\        __/             
 $We         \____$Cn\______/$We              
"
}

#-h|--help:
function command_help() {
  echo -e "
   $Yw""USAGE:""
   $We""sudocker [OPTIONS]""

   $Yw""OPTIONS:""
   $Gn-h$We,$Gn --help     $We""Show this help message and exit""
    $Gn""h""             $We""Show the Docker help and some basics commands""
    $Gn""img""           $We""Show all the images""
    $Gn""ps""            $We""Show all the container processes""
    $Gn""ex""            $We""Execute a container."" Use:$Cn sudocker ex <ID/NAME> <SHELL>$We
  "
}

#Help:
function help() {
  echo -e "  
  [$Gn*$We] How to Download Docker ~> $Gn "https://www.docker.com/products/docker-desktop" $We
  [$Gn*$We] Docker Hub ~> $Gn "https://hub.docker.com" $We 

  [$Gn*$We] How to Setup the Docker Group:
     $We- Create a Docker group:$Cn sudo groupadd docker $We
     $We- Add user to docker group:$Cn sudo usermod -aG docker <user_name> $We
     $We- Logout and login again, and after run this command:$Cn newgrp docker $We

  [$Gn*$We] Basic Commands: 
     $We- List all images:$Cn docker images $We
     $We- Pull an image:$Cn docker pull $Be<image_name> $We
     $We- Remove an image:$Cn docker rmi $Be<image_name> $We
     $We- Remove all unused images:$Cn docker image prune $We
     $We- Run an image:$Cn docker run --name <custom_name> -it $Be<image_name> <shell> $We
     $We- Run an image in the backgroud:$Cn docker run -d $Be<image_name> $We
     $We- Functions:$Cn docker start|stop|restart|pause|unpause|wait|kill|attach $We
     $We- List process:$Cn docker ps -a $Be(Same as ps --all) $We
     $We- Remove an image process:$Cn docker rm $Be<container_name> $We
     $We- Execute an image:$Cn docker exec -it $Be<container_name> <shell> $We
  "
}

#Action:
function action() {
  echo -e "
      $(docker_logo)

    𝙳𝚘𝚌𝚔𝚎𝚛, 𝚌𝚘𝚗𝚝𝚊𝚒𝚗𝚎𝚛 𝚊𝚗𝚍 𝙰𝙲𝚃𝙸𝙾𝙽!

1) Return
2) Run
3) Execute
4) The Image list
5) The Container list
6) The Manager
7) Exit
   "
while true; do 

read -p "[🐳]> " newoption

case $newoption in
    1)
      clear
      panel
      ;;
    2)
      echo -e "
══════════════════════════════════════════════════════════════
OPTIONS:

$Gn""docker run --name <custom_name> -it <image_name> <shell>""$We

$(docker images| cut -d' ' -f1)

$(docker ps -a| cut -d' ' -f1,4,17)
══════════════════════════════════════════════════════════════
      "
      read -p "Custom name: " w1
      echo
      echo -e "> $Gn""docker run --name $w1""$We"
      read -p "Your container image: " w2
      echo
      echo -e "> $Gn""docker run --name $w1 -it $w2""$We"
      read -p "Your container shell: " w3
      echo
      echo -e "> $Gn""docker run --name $w1 -it $w2 $w3""$We"
      docker run --name $w1 -it $w2 $w3
      echo
      ;;
    3)
      echo -e "
════════════════════════════════════════════
OPTIONS:

$Gn""docker exec -it <container_name> <shell>""$We

$(docker ps -a| cut -d' ' -f1,4,17)
════════════════════════════════════════════
      "
      read -p "Your container id: " w1
      echo
      echo -e "> $Gn""docker exec -it $w1""$We"
      read -p "Your container shell: " w2
      echo
      echo -e "> $Gn""docker run --name $w1 -it $w2""$We"
      docker exec -it $w1 $w2
      echo
      ;;
    4)
     echo -e "
      [$Gn!$We] The Image list:
      "
      docker images
      echo
      ;;
    5)
      echo -e "
      [$Gn!$We] The Container list:
      "
      docker ps -a
      echo
      ;;
    6)
      echo -e "
══════════════════════════════════════
OPTIONS:

$Gn""start|stop|restart|pause|unpause|kill|rm""$We


$(docker ps -a| cut -d' ' -f1,4,17)
══════════════════════════════════════
      "
      read -p "You want to: " w1
      echo
      echo -e "> $Gn""docker $w1""$We"
      read -p "Your container id: " w2
      echo
      echo -e "> $Gn""docker $w1 $w2""$We"
      docker $w1 $w2
      echo
      ;;
    7)
      exit 1
      ;;
    *)
      echo
      echo -e " [$Rd""Error!""$We] Invalid option."
      echo
      read -p " Press any key to continue..."
      ;;
    esac
done
}


########################################################################
########################################################################


#Options:
while [ $# -gt 0 ]; do
  case "$1" in
      -h|--help)
      command_help
      exit 1
      ;;
      h)
      help
      exit 1
      ;;
      img)
      echo
      docker images
      echo
      exit 1
      ;;
      ps)
      echo
      docker ps -a
      echo
      exit 1
      ;;
      ex)
      docker start $2
      docker exec -it $2 $3
      exit
      ;;
    *)
      echo -e " [$Rd""Error!""$We] Invalid option: $1
 
 Try $Gn-h$We or $Gn--help$We for more info 
      "
      exit 1
      ;;
  esac
  shift
done

#Docker Checker:
    if [[ $(command -v docker >/dev/null 2>&1 && echo -e "OK" || echo -e "Not OK") == "OK" ]]; then
        binary="$Gn True $We"
    else
        binary="$Rd False $We"
    fi

#Docker Group:
    groups | grep docker > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        thegroup="$Gn True $We"
    else
        thegroup="$Rd False $We"
    fi

#Status Panel:
function panel() {
echo -e "
      $(docker_logo)

          𝙼𝚢 𝙳𝚘𝚌𝚔𝚎𝚛 𝚃𝚛𝚒𝚌𝚔𝚜

 [$Cn"Status"$We]
 [$Cn+$We] Docker Binary:$binary
 [$Cn+$We] Docker Group:$thegroup

 [$Be"Options"$We]
 [$Yw?$We] 1. Help
 [$Gn!$We] 2. Action
 [$Rd"X"$We] 3. Exit
"
while true; do 

read -p " [🐋]> " option

case $option in
    1)
      clear 
      help
      exit 1
      ;;
    2)
      clear
      action
      ;;
    3)
      exit 1
      ;;
    *)
      echo
      echo -e " [$Rd""Error!""$We] Invalid option."
      echo
      read -p " Press any key to continue..."
      ;;
    esac
done
}

#Main function:
panel
